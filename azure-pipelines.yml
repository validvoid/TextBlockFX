# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
  tags:
    include:
    - '*'

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86|x64|ARM'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/TextBlockFX.Win2D.UWP/TextBlockFX.Win2D.UWP.csproj'

- task: VSBuild@1
  inputs:
    solution: '**/TextBlockFX.Win2D.UWP/TextBlockFX.Win2D.UWP.csproj'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'
    platform: 'AnyCPU'
    configuration: '$(buildConfiguration)'
    clean: true

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: '**/TextBlockFX.Win2D.UWP/TextBlockFX.Win2D.UWP.nuspec'
    versioningScheme: 'off'
    packDestination: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: NuGetAuthenticate@0
  inputs:
    nuGetServiceConnections: 'Nuget.org'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Nuget.org'